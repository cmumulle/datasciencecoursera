install.packages("slidify")
install.packages("ggplot2")
install.packages("slidify")
source("http://bioconductor.org/biocLite.R")
biocLite()
library(ggplot2)
search()
install.packages("slidify")
library(devtools)
install_github('slidify', 'cmumulle')
install_github('slidifyLibraries', 'cmumulle')
require(devtools)
install.packages("devtools")
library(devtools)
require(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
install.packages
library()
install.packages("mgcv")
x <- 4
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[2]]
class(x[[2]])
class(x[[2]]) == integer
is.atomic(x[[2]])
x <- 1:4 y <- 2:3
y <- 2:3
x <- 1:4
x+y
class(x+y)
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] <- 4
x
x[x > 10] == 4
x[x == 4] > 10
x[x == 10] <- 4
x
data <- read.table("hw1_data.csv")
pwd
data <- read.table("hw1_data.csv")
hw1_data <- read.csv("~/OneDrive/Documents/Data Science/R Programming/hw1_data.csv")
View(hw1_data)
hw1_data
class(hw1_data)
newdata <- subset(hw1_data, nrow = 2)
newdata
hw1_data[47, ]
good <- complete.cases(hw1_data( ,1))
good <- complete.cases(hw1_data)
good
hw1_data( , 1 == NA)
hw1_data
airquality = hw1_data
apply(is.na(airquality),2,sum)
ozone = airquality(,2)
ozone = airquality[ ,2]
ozone
ozone = airquality[ ,1]
ozone
good <- complete.cases(ozone)
good
ozone(good)
ozone[good]
mean(ozone[good])
data <- subset(hw1_data, "Ozone" > 31, "Temp" > 90)
data
data <- subset(hw1_data, Ozone>31, temp>90)
data <- subset(hw1_data, Ozone>31, Temp>90)
data
subset(hw1_data, Ozone>31, Temp>90)
hw1_data[Ozone>31]
subset(hw1_data, Ozone > 31 & Temp > 90)
data <- subset(hw1_data, Ozone > 31 & Temp > 90)
data
mean(data(Solar.R))
mean(data[Solar.R])
mean(data)
data
mean(data[,2])
data <- subset(hw1_data, Month == 6)
data
mean(data[,4])
data <- subset(hw1_data, Month == 5)
data
max(data[,1])
good <- complete.cases(data)
good
ozone = data[ ,1]
ozone
good <- complete.cases(ozone)
good
ozone[goodf]
ozone[good]
max(ozone[good])
x <- 4L
class(x)
x <- c(4, TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2:3
x+y
class(x+y)
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
ozone = hw1_data[ ,1]
ozone
is.na(ozone)
sum(is.na(ozone))
good <- complete.cases(ozone)
good
ozone[good]
mean(ozone[good])
data <- subset(hw1_data, Ozone > 31 & Temp > 90)
data
mean(data[,2])
data <- subset(hw1_data, Month == 6)
data
mean(data[,4])
data <- subset(hw1_data, Month == 5)
data
ozone <- data[1,]
ozone
ozone <- data[,1]
ozone
good <- complete.cases(ozone)
ozone[good]
max(ozone[good])
install.packages("swirl")
packageVersion("swirl")
library(swirl)
rm(list=ls())
ls()
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
swirl()
5+7
x <- 6+7
x <- 5 + 6
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.13)
z <- c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z -1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
swirl()
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
dir.create("testdir")
ls()
setwed(testdir)
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
getwd()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename("mytest.R", "mytest2.R")
?file.copy
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
?file.path
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1,20)
se(0,10,by=0.5)
seq(0,10,by=0.5)
seq(5,10,by=39^0)
seq(5,10,by=30)
my_seq = seq(5,10,by=30)
my_seq <- seq(5,10,by=30)
my_seq
| <- seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times010)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each= 10)
num_vect = c(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- (num_vect < 1)
tf <- num_vect <1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Chris")
my_name
paste(myname, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X","Y","Z"), sep="")
paste(LETTERS, 1:4, sep = "-")
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_data
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 \ 0
0 / 0
inf - inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector
my_vector <- 1:20
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data) <- cnames
my_data
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
getwd()
ls()
dir()
cd("OneDrive")
swirl
swirl()
install.packages("swirl")
library(swirl)
swirl()
getwd()
ls()
x <- 9
ls()
dir()
list.files()
list.files
?list.files
args(list.files)
old.dir <- getwd()
andy <- read.csv("diet_data/Andy.csv")
head(andy)
ls
ls()
getwd()
quit
exit
bye()
ls
getwd
dir
ls
list.files
swirl()
library(swirl)
install_from_swirl("R Programming")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_list <- sapply(flags, class)
cls_list <- lapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lappy(flag_colors, sum)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply(vector, index, function)
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
quit()
swirl()
library(datasets)
data(iris)
?iris
class(iris)
iris
head(iris)
tapply(iris, iris$Sepal.Length, mean)
mean(iris$Sepal.Length)
apply(iris[, 1:4], 1, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
colMeans(iris)
rowMeans(iris[, 1:4])
apply(iris, 2, mean)
library(datasets)
data(mtcars)
head(mtcars)
tapply(mtcars, mtcars$cyl, mean)
?mtcars
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(mtcars, cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
lapply(mtcars, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl == 4, mean)
mean(mtcars[mtcars$cyl == "8",]$hp) - mean(mtcars[mtcars$cyl == "4",]$hp)
debug(ls)
ls
library(datasets)
data(iris)
mean(iris$Sepal.Length)
quit
iris
tapply(iris$Sepal.Length, iris$Species, mean)
setwd("~/OneDrive/Documents/Data Science/datasciencecoursera/rprog-data-ProgAssignment3-data")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
